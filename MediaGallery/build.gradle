apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'
apply plugin: 'kotlin-parcelize'

android {

    compileSdkVersion compileSdkVer
    buildToolsVersion buildToolsVer

    defaultConfig {
        minSdkVersion minSdkVer
        targetSdkVersion targetSdkVer
        versionCode isCi ? commitCount() : VERSION_CODE
        versionName isCi ? simpleReleaseVersionName() : VERSION_NAME
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'

        buildConfigField "String", "SIMPLE_VERSION_NAME", escape(simpleReleaseVersionName())
        buildConfigField "String", "CANONICAL_VERSION_NAME", escape(canonicalReleaseVersionName())
        buildConfigField "String", "COMMIT_HASH", escape(commitHash())
        buildConfigField "String", "BRANCH", escape(branchNameByGit())

        // to avoid lib compile for release when app is compiled for debug: //http://stackoverflow.com/a/30134955/2736039
        defaultPublishConfig 'release'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // region java compile options

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(11))
        }
    }

    // endregion

    // region kotlin compile options

    kotlinOptions {
        jvmTarget = "11"
        freeCompilerArgs += [
                // disable linting for opt-in annotations
                "-Xopt-in=kotlin.RequiresOptIn",
                // disable compose version check
                "-P",
                "plugin:androidx.compose.compiler.plugins.kotlin:suppressKotlinVersionCompatibilityCheck=true"
        ]
    }

    // endregion

    // region lint options

    lintOptions {
        disable 'InvalidPackage'
        abortOnError false        // true by default
        checkAllWarnings false
        checkReleaseBuilds false
        ignoreWarnings true       // false by default
        quiet true                // false by default
        tasks.lint.enabled = false
    }

    // endregion

    // region adb options

    adbOptions {
        timeOutInMs 10 * 60 * 1000 // 10 minutes
    }

    // endregion

    // region buildFeatures

    buildFeatures {
        viewBinding true
    }

    // endregion
}

kapt {
    useBuildCache = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])


    implementation libs.recyclerViewPresenter
    implementation libs.resourceExtensions
    implementation libs.applicationProvider
    implementation libs.zoomage
    implementation libs.numberprogressbar

    implementation libs.multidex
    implementation libs.appCompat
    implementation libs.appCompatResources
    implementation libs.material
    implementation libs.constraintlayout
    implementation libs.androidKtxCore

    implementation libs.viewpager2

    implementation libs.glide
    implementation libs.glideOkHttp3
    implementation libs.lifecycleCommonJava8
    kapt libs.glideAnnotationsProcessor

    implementation libs.okhttp4
    implementation libs.okhttp3LoggingInterceptor

    implementation libs.rx2java
    implementation libs.rx2Android
    implementation libs.exoplayer
    implementation libs.md360Player
    implementation libs.lottie

    implementation libs.progressManager

    implementation libs.indefinitePagerIndicator

}

def escape(Object value) {
    return "\"" + value + "\""
}

configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 10, 'minutes'

    resolutionStrategy.force libs.okhttp4
    resolutionStrategy.force libs.okhttp3LoggingInterceptor
}
